// This build script is for an example project using GWT, Xtend and Auto-GWT, with Gradle and Eclipse.
// I couldn't find any complete Gradle samples online, so I wanted to share this.
// My notes for getting this project into a workable state, your milage may vary:
//
// @WebServlet annotations work both via "gradle gwtDev" and the Eclipse GWT plugin but only with at least the 2.8.0 SDK.
//
// To set up the project in Eclipse:
// - Download Eclipse for DSL developers
// - Consider installing the Google Plugin for Eclipse (GWT support): https://developers.google.com/eclipse/docs/download
//   - If you do, install the 2.8.0 SDK for the plugin, too: https://developers.google.com/eclipse/docs/using_sdks
//     Which you can find here: http://www.gwtproject.org/versions.html
// - Consider using http://sdbg.github.io/ in Eclipse for Eclipse-integrated client-side debugging.
// - Run in the directory containing this build script: gradle eclipse
// - In Eclipse, use File > Import > General/Existing Projects into Workspace, and select this directory.
//
// To compile in Gradle for production, etc:
// - Run in the directory containing this build script: gradle war
// - Created war file is in build/libs
// - Tested to work with Tomcat 8.5

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'org.xtext:xtext-gradle-plugin:1.0.17'
        classpath 'org.eclipse.xtext:org.eclipse.xtext.xbase.lib:2.11.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
    }
}

apply plugin: 'war'
apply plugin: 'gwt'
gwt {
	gwtVersion='2.8.0'
    
	modules 'net.opensorcerers.game.GameClient'
	
	maxHeapSize = "1024M"
}
clean.delete 'war'

group = 'net.opensorcerers'
version = '0.0.1'

dependencies {
    // GWT
    // disable transitive so we can use a later xtend version.
    gwt(group: 'org.xtend', name: 'auto-gwt', version: '0.0.1', classifier: 'sources') { transitive = false }
    gwt(group: 'org.xtend', name: 'auto-gwt', version: '0.0.1') { transitive = false }
    gwt group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase.lib.gwt', version: xtextVersion
    gwt group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase.lib', version: xtextVersion, classifier: 'sources'
    compile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase.lib', version: xtextVersion
    gwt group: 'org.eclipse.xtend', name: 'org.eclipse.xtend.lib.gwt', version: xtextVersion
    gwt group: 'org.eclipse.xtend', name: 'org.eclipse.xtend.lib', version: xtextVersion, classifier: 'sources'
    compile group: 'org.eclipse.xtend', name: 'org.eclipse.xtend.lib', version: xtextVersion
    gwt 'com.google.guava:guava-gwt:21.0'
    compile 'com.google.guava:guava:21.0'
    compileOnly 'javax.servlet:javax.servlet-api:3.0.1'
    
    gwt 'org.gwtbootstrap3:gwtbootstrap3:0.9.4'
    gwt 'org.gwtbootstrap3:gwtbootstrap3-extras:0.9.4'
    
    // Xtext for AutologyScript
	compile project(':net.opensorcerers.language')
	compile project(':net.opensorcerers.language.ide')
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.3.2"
	compile "org.webjars:jquery:2.2.4"
	compile "org.webjars:ace:1.2.3"
    
    // Database
    compile 'mysql:mysql-connector-java:6.0.4'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'org.hibernate:hibernate-core:5.2.3.Final'
    compile 'com.h2database:h2:1.4.192'
    
    // General
    compile 'org.reflections:reflections:0.9.10'
    testCompile 'junit:junit:4.12'
    testCompile 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.52.0'
	testCompile "org.eclipse.jetty:jetty-annotations:9.3.8.v20160314"
	testCompile "org.slf4j:slf4j-simple:1.7.21"
    testCompile "org.webjars:webjars-servlet-2.x:1.1"
    testCompile 'org.jacoco:org.jacoco.core:0.7.9' // for generating jacoco exec from gwt.coverage data
}

apply plugin: 'jacoco'
test {
    jacoco {
        includes = ['net.opensorcerers.*']
    }
}
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    executionData(file("build/GWTJacocoAdaptor/jacoco.exec"))
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'net/opensorcerers/language/**')
        })
    }
}
apply plugin: 'com.github.kt3k.coveralls'
tasks.coveralls {
  dependsOn 'check', 'jacocoTestReport'
}
